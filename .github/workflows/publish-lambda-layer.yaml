name: CI

on:
  workflow_call:
    inputs:
      layer-name:
        type: string
        description: 'Name of the lambda layer'
        required: true
      python-version:
        type: string
        description: 'Python version'
        required: true
        default: '3.11'
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true

jobs:
  does_dependency_change:
    runs-on: ubuntu-latest
    outputs:
      is_modified: ${{ steps.filter.outputs.dependency_changes == 'true' || steps.filter.outputs.version_changes == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # detect changes for current branch
          base: ${{ github.ref }}
          filters: |
            dependency_changes:
              - 'requirements.txt'
            version_changes:
              - 'version'

  install-and-upload-lambda-layer:
    needs: does_dependency_change
    if: needs.does_dependency_change.outputs.is_modified == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}
      
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli --upgrade --user
          export PATH=$PATH:$HOME/.local/bin
          aws --version
      
      - name: Create lambda layer
        run: |
          mkdir -p lambda-layer/python
          pip install -r requirements.txt -t lambda-layer/python
      
      - name: Zip lambda layer
        run: cd lambda-layer && zip -r ../lambda-layer.zip *
      
      - name: Upload lambda layer
        run:
          output=$(aws lambda publish-layer-version --layer-name "${{ inputs.layer-name }}" --description "Lambda layer for Python package" --license-info "MIT" --compatible-runtimes python${{ inputs.python-version }} --zip-file fileb://lambda-layer.zip)
          layer_version_arn=$(echo $output | jq -r '.LayerVersionArn')
          echo $layer_version_arn
          echo ::set-output name=layer_version_arn::$layer_version_arn
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
          AWS_DEFAULT_REGION: ${{ secrets.aws-region }}